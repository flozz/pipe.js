{
    "project": {
        "name": "Pipe.js",
        "description": "Simply queue asynchrone jobs.",
        "version": "1.0",
        "url": "https://github.com/flozz/pipe.js"
    },
    "files": {
        "src/pipe.js": {
            "name": "src/pipe.js",
            "modules": {},
            "classes": {
                "Pipe": 1,
                "Jobs pipe object": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "Pipe": {
            "name": "Pipe",
            "shortname": "Pipe",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/pipe.js",
            "line": 32,
            "description": "Asynchronous job queue.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "successCallback",
                    "description": "Called when everything is done successfully\n                                  (optional).",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "Called when something goes wrong (optional).",
                    "type": "Function"
                },
                {
                    "name": "progressCallback",
                    "description": "Called each time a task is done (optional,\n                                   callback: `function(progress){}` where\n                                   progress is a number between 0 and 1).",
                    "type": "Function"
                }
            ]
        },
        "Jobs pipe object": {
            "name": "Jobs pipe object",
            "shortname": "Jobs pipe object",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/pipe.js",
            "line": 171,
            "description": "pipe object that is passed as first parameter of each job function."
        }
    },
    "classitems": [
        {
            "file": "src/pipe.js",
            "line": 52,
            "description": "Add a job to the pipe.\n\nJob callback:\n\n    function(pipe, [optional arg]) {}",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "job",
                    "description": "The job callback.",
                    "type": "Function"
                },
                {
                    "name": "arg",
                    "description": "An optional arg that will be passed as second argument of\n           the job function."
                }
            ],
            "class": "Pipe"
        },
        {
            "file": "src/pipe.js",
            "line": 74,
            "description": "Add a job for each item of the argument list.\n\nJob callback:\n\n    function(pipe, arg) {}",
            "itemtype": "method",
            "name": "addAll",
            "params": [
                {
                    "name": "job",
                    "description": "The job callback.",
                    "type": "Function"
                },
                {
                    "name": "argList",
                    "description": "Argument list (each item of the list will be passed\n                       as second argument of the job function).",
                    "type": "Array"
                }
            ],
            "class": "Pipe"
        },
        {
            "file": "src/pipe.js",
            "line": 92,
            "description": "Run the pipe.",
            "itemtype": "method",
            "name": "run",
            "params": [
                {
                    "name": "",
                    "description": "Any argument passed to this function will be passed to\n         the first job function.",
                    "multiple": true
                }
            ],
            "class": "Pipe"
        },
        {
            "file": "src/pipe.js",
            "line": 110,
            "description": "Must be called if any error append in a job.",
            "itemtype": "method",
            "name": "_error",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "",
                    "description": "Any argument passed to this function will be passed to the\n         errorCallback function.",
                    "multiple": true
                }
            ],
            "class": "Pipe"
        },
        {
            "file": "src/pipe.js",
            "line": 123,
            "description": "Must be called by each jobs when they are finished.",
            "itemtype": "method",
            "name": "_next",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "jobId",
                    "description": "The id of the job."
                },
                {
                    "name": "",
                    "description": "Any additional argument passed to this function will be passed to the next\n         job function or to the successCallback function if it is the last job.",
                    "multiple": true
                }
            ],
            "class": "Pipe"
        },
        {
            "file": "src/pipe.js",
            "line": 176,
            "description": "Must be called by the job when it was sucessfully finished.",
            "itemtype": "method",
            "name": "done",
            "static": 1,
            "params": [
                {
                    "name": "",
                    "description": "Any argument passed to this function will be passed to the next\n         job function or to the successCallback function if it is the last job.",
                    "multiple": true
                }
            ],
            "class": "Jobs pipe object"
        },
        {
            "file": "src/pipe.js",
            "line": 184,
            "description": "Must be called by the job when an error occure (that will\nstop the pipe and call the errorCallback function).",
            "itemtype": "method",
            "name": "error",
            "static": 1,
            "params": [
                {
                    "name": "",
                    "description": "Any argument passed to this function will be passed to the\n         errorCallback function.",
                    "multiple": true
                }
            ],
            "class": "Jobs pipe object"
        }
    ],
    "warnings": []
}